import pandas as pd
df=pd.read_csv(r"C:\Users\JPY\Downloads\Iris.csv")
df


print(df.shape)
print(df.info())

df=pd.read_csv(r"C:\Users\JPY\Downloads\Iris.csv")
x=df[['SepalLengthCm']]
y=df['SepalWidthCm']

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)

from sklearn.linear_model import LinearRegression
model=LinearRegression()
model.fit(x_train,y_train)

predictions=model.predict(x_test)
import sklearn.metrics as sm
print("Mean squared error=",round(sm.mean_squared_error(y_test,predictions),2))
  
from sklearn.metrics import confusion_matrix,accuracy_score
print(confusion_matrix(y_test,predictions))


KNN

from sklearn.neighbors import KNeighborsClassifier
knn=KNeighborsClassifier(n_neighbors=5,metric="euclidean")
knn.fit(x_train,y_train)
predictions=knn.predict(x_test)

from sklearn.metrics import confusion_matrix,accuracy_score
print(confusion_matrix(y_test,predictions))

print(accuracy_score(y_test,predictions))

DECISION TREE

from sklearn.tree import DecisionTreeClassifier
classifier=DecisionTreeClassifier(criterion='entropy',random_state=0)
classifier.fit(x_train,y_train)
predictions=knn.predict(x_test)

NAIVE BAYES

from sklearn.naive_bayes import GaussianNB
classifier=GaussianNB()
classifier.fit(x_train,y_train)
predictions=knn.predict(x_test)

LOGISTIC REGRESSION

from sklearn.linear_model import LogisticRegression
classifier=LogisticRegression(random_state=0)
classifier.fit(x_train,y_train)
predictions=knn.predict(x_test)

SUPPORT VECTOR MACHINE

from sklearn.svm import SVC
classifier=SVC(kernel='linear')
classifier.fit(x_train,y_train)
predictions=knn.predict(x_test)

